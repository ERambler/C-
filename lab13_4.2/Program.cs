/*
Выполнил: Дуничева Юлия Дмитриевна
Вариант №13, 
Задание: 
  Дан массив размера n × m, все элементы которого различны.
Необходимо найти такие элементы, которые одновременно являются
минимальными в своей строке и максимальными в своем столбце.
Также нужно вывести индексы этих элементов. Если в массиве нет
таких элементов, нужно вывести 0.
*/
using System;
namespace lab4_2
{
    class Program
    {
    static void Main()
        {   
            const int n = 6, m = 5;             //  массив размера n × m,
            bool virginity=true;                // Если в массиве нет таких элементов, нужно вывести 0.
            int [,] A = new int[n,m] 
                                        {{5 ,4 ,3 ,2 ,1 },
                                        {6 ,7 ,8 ,9 ,10},    
                                        {11,13,12,15,14},
                                        {25,21,22,23,24},
                                        {16,17,18,19,20},
                                        {31,27,28,29,30}};
            for (int i=0;i<n;i++)
            {
                int min = A[i,0], idx_j = 0;
                for (int j = 1; j < m; j++)         //Выясняем индекс минимального элемента
                {
                    if (A[i,j]<min) {min=A[i,j]; idx_j=j;} 
                }
                bool max=true;                       //Предположим, что наш элемент максимальный
                for (int k=0;k<n;k++)                //в найденном столбце и проверим это.
                {
                    if (A[k,idx_j]>A[i,idx_j]) {max = false; break;}    // Не имеет смысла выяснять максимальный,
                                                                        // если найден хотя бы один больший элемент,
                }                                                       //поэтому просто прервём перебор.
                if (max) {Console.WriteLine("А[{0},{1}]={2}",i,idx_j,A[i,idx_j]); virginity=false;}
            }
            if (virginity) Console.WriteLine("0");
        }
    }
}